@import url(http://fonts.googleapis.com/css?family=Play);      /* 구글 웹폰트 'Play'를 불러옵니다. 본문 텍스트에 쓰기 좋은 깔끔한 산세리프 폰트로 가독성을 올립니다. */
@import url(http://fonts.googleapis.com/css?family=Monoton);   /* 구글 웹폰트 'Monoton'을 불러옵니다. 로고/대제목에 쓰면 강한 인상을 주는 디스플레이용 폰트입니다. */


/* Reset CSS : 브라우저 기본 스타일 차이를 없애는 초기화 구간입니다. */
*                    
{margin:0;             /* 모든 요소의 바깥여백을 0으로 통일합니다. 요소들이 의도치 않게 벌어지지 않도록 합니다. */
padding:0;}           /* 모든 요소의 안쪽여백을 0으로 통일합니다. 박스 모델 계산을 예측 가능하게 만듭니다. */

ul,ol                
{list-style:none;}     /* 목록 앞의 점/숫자 마커를 제거합니다. 디자인 컨셉에 맞춘 커스텀 마커/아이콘을 쓰기 쉽습니다. */

a                  
{text-decoration:none; /* 링크의 기본 밑줄을 없앱니다. 필요할 때만 밑줄을 직접 주어 시각적 일관성을 유지합니다. */
color:#bbb}          /* 링크 글자색을 옅은 회색으로 지정합니다. 어두운 배경에서 과도하게 튀지 않게 기본 톤을 맞춥니다. */


/* body : 페이지 전체를 덮는 바탕(캔버스)입니다. */
body                
{position:fixed;      /* 화면에 고정합니다. 스크롤이 생겨도 body 자체는 움직이지 않아 배경 연출(풀스크린 비디오 등)에 유리합니다. */
width:100%;          /* 가로를 뷰포트 너비 100%로 맞춰 화면을 꽉 채웁니다. */
height:100%;         /* 세로를 뷰포트 높이 100%로 맞춰 전체 화면을 덮습니다. */
background:#111;}    /* 아주 어두운 회색 배경으로 설정합니다. 위에 올릴 형광색/흰색 요소가 선명하게 대비됩니다. */


/* 배경동영상 - full screen : 화면 전체를 덮는 동영상 컨테이너입니다. */
.vid                
{width:100%;          /* 컨테이너 가로를 화면 전체로 설정합니다. */
height:100%;         /* 컨테이너 세로를 화면 전체로 설정합니다. */
position:fixed;      /* 화면 위치에 고정하여 스크롤과 무관하게 항상 배경에 머무르게 합니다. */
top:-60px;           /* 위로 60px 올려 상단을 살짝 잘라내 시각적으로 더 꽉 찬 화면을 연출합니다. */
left:0px;            /* 왼쪽 모서리에 붙여 정렬합니다. */
opacity:0.9;}        /* 살짝 비치게 해 위에 겹치는 텍스트/아이콘이 더 또렷하게 보이도록 합니다. */

/* 실제 <video> 요소(미디어 자체)에 대한 스타일입니다. */
.vid video          
{width:100%;          /* 비디오의 가로를 부모(.vid) 너비에 맞춰 반응형으로 채웁니다. */
min-width:1600px;}   /* 최소 너비를 1600px로 보장합니다. 화면이 너무 좁아 확대되며 흐려지는 상황을 줄여 품질을 지킵니다. */


/* Nike Air Max 로고 : 좌상단에 고정되는 로고/브랜드 영역입니다. */
h1                  
{position:fixed;      /* 화면에 고정하여 스크롤해도 항상 같은 자리에 보이게 합니다. */
top:40px;            /* 상단에서 40px 띄워 안전 여백을 확보합니다. */
left:40px;           /* 좌측에서 40px 띄워 균형 잡힌 여백을 만듭니다. */
z-index:10;}         /* 다른 배경 요소보다 위 레이어에 배치해 비디오/패널에 가려지지 않게 합니다. */

/* 로고 이미지 자체의 크기 비율을 제어합니다. */
h1 img              
{width:80px;          /* 가로 크기를 80px로 고정합니다. 다양한 화면에서도 일관된 시각적 무게감을 유지합니다. */
height:auto;}        /* 세로는 가로 비율에 맞춰 자동으로 설정해 찌그러짐을 방지합니다. */


/* header : 왼쪽에서 비스듬히 들어오는 컬러 패널(장식 + 메뉴 배경 역할)입니다. */
header              
{width:700px;         /* 패널의 가로 폭입니다. 메뉴 폭과 시각적 균형을 고려한 값입니다. */
height:100%;         /* 세로를 화면 전체 높이로 맞춰 좌측 전면 패널처럼 보이게 합니다. */
position:fixed;      /* 화면에 고정해 스크롤과 상관없이 항상 같은 위치를 지킵니다. */
background:greenyellow; /* 형광 그린 배경으로 강한 포인트를 주고, 브랜드 컬러 무드를 형성합니다. */
transform:skewX(-40deg); /* X축으로 -40도 기울여 역동적인 형태감을 만듭니다. */
left:-420px;}        /* 화면 왼쪽 바깥으로 일부 밀어 '잘린 듯한' 그래픽 연출을 합니다. */


/* 1depth : 메인 메뉴(오른쪽 정렬 텍스트)입니다. */
#gnb                
{width:220px;         /* 메뉴 블록의 전체 너비입니다. */
position:absolute;   /* header 내부 기준으로 절대 위치를 잡습니다. */
top:150px;           /* 상단에서 150px 내려 사용자의 시야 높이에 위치시킵니다. */
right:0px;}          /* 헤더 오른쪽 끝에 붙여 배치합니다. */

/* 각 1단계 메뉴 항목(li). 하위 서브메뉴 배치를 위한 기준점이 됩니다. */
#gnb>li             
{position:relative;}  /* 자식(ul)이 이 li를 기준으로 절대 배치될 수 있게 합니다. */

/* 1단계 메뉴의 실제 클릭 영역(a)입니다. */
#gnb>li>a           
{display:block;       /* a를 블록 요소로 만들어 박스 전체가 클릭 가능하게 합니다. */
width:220px;         /* 버튼 가로 크기입니다. 메뉴 폭과 동일하게 맞춥니다. */
height:50px;         /* 버튼 세로 크기입니다. 터치/클릭 편의성을 고려합니다. */
font:bold 18px/3;    /* 글자를 굵게, 크기 18px, 줄간격 3으로 설정해 공기감을 줍니다. */
color:#222;          /* 어두운 회색 텍스트로 읽기 쉬운 대비를 제공합니다. */
box-sizing:border-box; /* 패딩을 포함하여 박스 크기를 계산해 레이아웃 붕괴를 방지합니다. */
padding-right:40px;  /* 오른쪽에 여백을 두어 아이콘 또는 시각적 균형을 잡습니다. */
text-align:right;}   /* 텍스트를 오른쪽 정렬해 디자인 리듬을 만듭니다. */

/* on 상태: 현재 위치한 페이지/섹션을 강조 표시합니다. */
#gnb>li.on>a        
{background:#111;     /* 배경을 어둡게 바꿔 즉시 알아보도록 합니다. */
color:#fff;}         /* 글자를 흰색으로 반전해 대비와 가독성을 높입니다. */

/* hover 상태: 마우스를 올렸을 때 즉각적인 피드백을 줍니다. */
#gnb>li:hover>a     
{background:#111;     /* 배경을 어둡게 변경합니다. on 상태와 동일한 강도의 주의를 줍니다. */
color:#fff;}         /* 글자는 흰색으로 바꿔 선명하게 보이게 합니다. */

/* header가 기울어져 있으므로, 메뉴 텍스트는 반대로 기울여 시각적으로 수평처럼 보이게 보정합니다. */
#gnb em             
{display:inline-block;             /* transform을 적용하려면 인라인블록이 적합합니다. 줄바꿈과 크기 제어도 용이합니다. */
transform:skewX(40deg)!important;}/* X축 +40도 기울여 header의 -40도를 상쇄해 가독성을 확보합니다. */

/* 메뉴 내 아이콘과 텍스트 사이 간격을 띄워 답답함을 줄입니다. */
#gnb em i           
{margin-right:20px;}  /* 아이콘 오른쪽에 20px 여백을 줍니다. 텍스트와 구분이 선명해집니다. */


/* 2depth : 메인 메뉴 옆으로 슬라이드되어 나타나는 서브메뉴입니다. */
#gnb ul             
{position:absolute;   /* 부모(li) 기준으로 정확한 위치에 겹쳐 배치합니다. */
left:0px;            /* 기본 X좌표입니다. hover 전에는 겹친 상태로 숨겨집니다. */
top:0px;             /* 기본 Y좌표입니다. */
opacity:0;           /* 처음에는 보이지 않게 숨깁니다. */
transition:all 0.4s;}/* 나타날 때 위치/투명도가 0.4초 동안 부드럽게 변하도록 합니다. */

/* 1단계 메뉴에 마우스를 올리면 서브메뉴가 오른쪽으로 미끄러지며 등장합니다. */
#gnb>li:hover ul    
{opacity:0.8;         /* 80% 불투명도로 나타나 배경과 레이어 분리가 됩니다. */
left:205px;}         /* 205px 오른쪽으로 이동해 '슬라이드 아웃' 효과를 만듭니다. */

/* 서브메뉴 항목 자체의 기본 스타일입니다. */
#gnb ul a           
{display:block;       /* 한 줄 전체가 클릭 가능하도록 블록화합니다. */
width:150px;         /* 항목 가로 폭입니다. 본문 가독성에 알맞은 폭입니다. */
height:40px;         /* 항목 높이입니다. 마우스 타겟 크기를 확보합니다. */
background:#222;     /* 어두운 배경으로 1depth와 시각적으로 구분합니다. */
border-bottom:1px solid #b9fb05; /* 아래쪽에 형광 그린 구분선을 넣어 아이템을 구획합니다. */
font:bold 16px/2.5 arial;        /* 볼드 16px, 줄간격 2.5로 읽기 편한 행간을 만듭니다. */
color:#fff;          /* 흰색 텍스트로 어두운 배경에서 가독성을 높입니다. */
box-sizing:border-box;           /* 패딩을 포함해 너비를 계산해 줄바꿈/깨짐을 방지합니다. */
padding-left:50px;   /* 왼쪽 여백을 줘 아이콘·텍스트가 답답하지 않게 합니다. */
margin-bottom:3px;   /* 항목 사이 약간의 간격을 둬 클릭 실수를 줄입니다. */
transition:all 0.5s;}/* 호버 시 배경/색 변화가 0.5초 동안 부드럽게 진행됩니다. */

/* 서브메뉴 호버 시 반전 효과로 즉각적인 강조를 줍니다. */
#gnb ul a:hover     
{background:#b9fb05;  /* 형광 그린으로 밝게 반전해 시선을 끕니다. */
color:#333;}         /* 글자는 짙은 회색으로 바꿔 밝은 배경에서도 눈이 편합니다. */

/* on 상태의 1depth에서는 서브메뉴를 살짝 위로 올린 위치에서 항상 펼친 듯 보이게 합니다. */
#gnb>li.on ul       
{opacity:0.8;         /* 보이는 상태를 유지합니다. */
left:205px;          /* 오른쪽 펼침 위치를 고정합니다. */
top:-10px;}          /* 위로 10px 올려 시각적 정렬감을 맞춥니다. */

/* on 상태 서브 항목은 기본 배경을 조금 더 밝은 회색으로 두고 약간 투명하게 처리해 레벨 차이를 둡니다. */
#gnb li.on ul a     
{background:#444;     /* 아주 짙은 회색(#444) 배경으로 차분한 느낌을 줍니다. */
opacity:0.7;}        /* 살짝 비치게 처리해 상·하위 레이어를 구분합니다. */


/* sns 버튼 : 화면 우상단 고정 소셜 아이콘 영역입니다. */
#sns                
{position:fixed;      /* 화면에 고정하여 스크롤과 무관하게 항상 보이게 합니다. */
top:60px;            /* 상단에서 60px 띄워 다른 요소와 겹치지 않게 합니다. */
right:50px;}         /* 우측에서 50px 띄워 안전 여백을 확보합니다. */

/* 소셜 아이콘을 가로로 나열합니다. */
#sns li             
{float:left;          /* 왼쪽부터 차례로 가로 배치합니다. */
margin-right:30px;}  /* 아이콘 간에 30px 간격을 둬 답답하지 않게 합니다. */

/* 개별 아이콘(Font Awesome 등)의 기본 상태 스타일입니다. */
#sns .fa            
{font-size:25px;      /* 아이콘 크기를 25px로 설정해 작지 않게 보장합니다. */
color:#b9fb05;       /* 형광 그린 포인트 컬러로 브랜드 무드를 유지합니다. */
opacity:0.5;         /* 기본 상태를 반투명으로 둬 호버 대비를 만들고 시각적 무게를 줄입니다. */
transform:scale(1);  /* 기본 크기(1배)입니다. 호버 시 확대의 기준점이 됩니다. */
transform:all 0.5s;} /* (오타) 여기서는 transition이 맞습니다. 모든 변화가 0.5초에 걸쳐 부드럽게 보이게 하는 의도입니다. */

/* 호버 시 아이콘을 또렷하고 크게 보여 상호작용을 명확히 합니다. */
#sns .fa:hover      
{opacity:1;           /* 불투명도를 1로 높여 선명하게 보이게 합니다. */
transform:scale(1.4);}/* 1.4배 확대해 마우스가 올라간 대상을 즉시 인지하게 합니다. */


/* 텍스트 박스 : 오른쪽 영역에 카피와 타이틀을 겹쳐 보이는 래퍼입니다. */
.txtBox             
{width:340px;         /* 텍스트 박스 가로 크기입니다. 너무 넓지 않게 읽기 영역을 제한합니다. */
height:280px;        /* 텍스트 박스 세로 크기입니다. 타이틀/문구 배치를 고려한 높이입니다. */
position:fixed;      /* 화면에 고정해 배경 위에서 떠 있는 카드처럼 보이게 합니다. */
top:200px;           /* 상단에서 200px 내려 시야 중심 근처에 배치합니다. */
right:70px;}         /* 우측에서 70px 띄워 균형 잡힌 여백을 둡니다. */

/* 본문 카피(작은 문장)입니다. */
.txt                
{position:absolute;   /* .txtBox 내부 기준으로 정확한 위치를 잡습니다. */
top:200px;           /* 박스 상단 기준 200px 아래에 배치합니다. */
right:0px;           /* 우측 정렬로 시각적 리듬을 유지합니다. */
font-size:34px;      /* 크기를 충분히 키워 헤드라인급 강조를 줍니다. */
font-family:play;    /* Play 폰트로 본문 가독성과 통일감을 확보합니다. */
color:#bbb;          /* 텍스트를 밝은 회색으로 설정해 강한 형광색과의 대비를 조절합니다. */
letter-spacing:-2px;}/* 자간을 약간 좁혀 한 덩어리로 보이게 하여 임팩트를 줍니다. */

/* 문장 내 강조 단어입니다. */
.txt b              
{font:bold 34px arial;/* 같은 크기에서 굵게 + Arial로 바꿔 대비를 더합니다. */
color:#b9fb05;       /* 형광 그린으로 포인트를 주어 키워드가 눈에 띄게 합니다. */
margin-left:20px;}   /* 앞 단어와 20px 간격을 둬 읽기 흐름을 자연스럽게 합니다. */

/* 대형 타이틀(메인 문구)입니다. */
.tit                
{position:absolute;   /* .txtBox 내부에서 정확한 위치를 잡습니다. */
top:0px;             /* 박스 상단에 붙입니다. */
right:0px;           /* 우측 정렬로 강한 가장자리를 형성합니다. */
font-size:160px;     /* 매우 큰 크기로 시선을 단번에 끕니다. */
color:#b9fb05;       /* 형광 그린으로 브랜드 포인트를 강하게 반영합니다. */
font-family:'Monoton', cursive; /* 개성 강한 Monoton으로 로고 같은 인상을 줍니다. */
letter-spacing:-1px;}/* 대형 글자 간격을 살짝 줄여 조형적으로 다듬습니다. */

/* 타이틀 내부 보조 강조입니다(서브 텍스트/년도 등). */
.tit em             
{font-size:50px;      /* 메인보다 작은 크기로 위계(서브)를 드러냅니다. */
font-family:play;    /* 본문 폰트와 맞춰 가독성을 높입니다. */
color:#fff;}         /* 흰색으로 배경/메인 컬러와 또 다른 대비를 줍니다. */


/* contents 레이아웃 : 오른쪽에서 미끄러져 나오는 사이드 콘텐츠 패널입니다. */
#side               
{width:800px;         /* 패널 가로 폭입니다. 썸네일/텍스트를 담기 충분한 너비입니다. */
height:100%;         /* 세로를 화면 전체로 설정합니다. */
position:fixed;      /* 화면에 고정하여 스크롤 중에도 같은 자리에서 상호작용합니다. */
bottom:0px;          /* 하단 기준으로 붙여 수평선을 맞춥니다. */
right:-800px;        /* 기본은 화면 밖으로 완전히 숨긴 상태입니다. 인터랙션 때 등장합니다. */
background:#111;     /* 어두운 배경으로 속 컨텐츠 대비를 세웁니다. */
opacity:0.5;         /* 약간 투명하게 해 배경과 자연스럽게 어울리게 합니다. */
transform:skewX(-40deg); /* 헤더와 동일한 -40도 기울임으로 디자인 언어를 통일합니다. */
transition:all 0.5s;}/* hover 시 위치/투명도 등이 0.5초에 걸쳐 자연스럽게 변합니다. */

/* 패널 상호작용 : hover하면 패널이 일부 화면 안으로 들어옵니다. */
#side:hover         
{right:-500px;        /* 오른쪽 오프셋을 줄여 300px 만큼 화면 안으로 슬라이드합니다. */
opacity:0.8;}        /* 불투명도를 올려 '활성화' 느낌을 줍니다. */

/* 실제 콘텐츠(썸네일/텍스트)를 담는 내부 박스입니다. */
#side .con          
{width:400px;         /* 내부 콘텐츠 폭입니다. 패널의 절반으로 여백과 균형을 만듭니다. */
height:100%;         /* 세로를 패널 전체로 맞춥니다. */
position:absolute;   /* 패널 내부에서 정밀한 위치 제어를 가능하게 합니다. */
left:150px;          /* 패널 기울임을 고려해 시작점을 150px 안쪽으로 둡니다. */
bottom:0px;          /* 하단에 붙여 수평 기준선을 맞춥니다. */
background:#000; 	   /* 완전 검정으로 내부 요소(이미지/텍스트)가 더 선명해집니다. */
box-sizing:border-box; /* 패딩을 포함해 박스 크기를 계산해 레이아웃이 안정적입니다. */
padding:10px;        /* 내용과 경계 사이에 숨 쉴 공간을 줍니다. */
transition:all  1s;} /* 패널 hover 시 1초에 걸쳐 더 부드럽게 이동합니다. */

/* 패널 hover 시 내부 콘텐츠도 더 안쪽으로 이동해 등장감을 강화합니다. */
#side:hover .con    
{left:50px;}          /* 왼쪽으로 100px 추가 이동해 '따라 나오는' 느낌을 줍니다. */


/* contents내 썸네일 : 이미지 띠와 캡션으로 구성된 항목들입니다. */
#side .con p 
{width:300px;         /* 썸네일 블록의 너비입니다. 가독성과 비율을 고려한 값입니다. */
height:100px;        /* 썸네일 블록의 높이입니다. 캡션+이미지 라인에 맞춥니다. */
position:absolute;   /* 내부에서 각 썸네일의 정확한 위치를 지정합니다. */
left:50px;}          /* 왼쪽으로 50px 들여써 레이아웃 공기를 만듭니다. */

/* 썸네일 캡션(한 줄 제목)입니다. */
#side .con p em 
{display:inline-block; /* 줄바꿈/여백 제어를 쉽게 하도록 인라인블록으로 둡니다. */
font:bold 16px/1.7 arial; /* 16px 볼드, 줄간격 1.7로 작지만 선명하게 보이게 합니다. */
color:#a0bd50;       /* 연두색 계열로 메인 형광색과 계열감을 맞추되 과하지 않게 합니다. */
transform:skewX(40deg);} /* 패널이 -40도 기울었으므로 +40도로 보정해 수평처럼 보이게 합니다. */

/* 썸네일 이미지(얕은 띠 형태)입니다. */
#side .con p img 
{width:300px;         /* 썸네일 블록 너비에 딱 맞춥니다. */
height:70px;         /* 얕은 띠처럼 보이는 높이로 미니 갤러리 느낌을 냅니다. */
opacity:0.3;         /* 기본은 흐릿(비활성) 상태로 두어 hover 대비를 줍니다. */
transition:all 0.5s;}/* 호버 시 선명해지는 변화가 0.5초에 걸쳐 부드럽게 재생됩니다. */

/* 이미지에 마우스를 올리면 선명하게 보여 상호작용을 느끼게 합니다. */
#side .con p img:hover 
{opacity:1;}          /* 불투명도 1로, 완전 선명하게 전환합니다. */

/* 순차 등장 애니메이션: 각 썸네일을 다른 속도로 슬라이드 인 시킵니다. */
#side .con p:nth-child(1) 
{bottom:270px;        /* 첫 번째 썸네일의 세로 위치입니다. 위쪽에 배치합니다. */
transform: translateX(200px); /* 기본 상태에서는 오른쪽으로 200px 밀어 대기시킵니다. */
transition:all  0.4s;}        /* 가장 빠른 0.4초로 들어오게 설정합니다. */

#side .con p:nth-child(2) 
{bottom:160px;        /* 두 번째 썸네일의 세로 위치입니다. 중간에 위치합니다. */
transform: translateX(200px); /* 동일하게 오른쪽 대기에서 출발합니다. */
transition:all  0.8s;}        /* 0.8초로 느리게 들어와 시간차를 만듭니다. */

#side .con p:nth-child(3) 
{bottom:50px;         /* 세 번째 썸네일의 세로 위치입니다. 아래쪽에 배치합니다. */
transform: translateX(200px); /* 오른쪽 대기 상태를 동일하게 유지합니다. */
transition:all  1.2s;}        /* 1.2초로 가장 늦게 들어와 순차 효과가 극대화됩니다. */

/* 패널에 마우스를 올리면 모든 썸네일이 제자리로 슬라이드 인됩니다. */
#side:hover .con p 
{transform:translateX(0px);} /* 오른쪽 오프셋을 0으로 없애 자연스럽게 등장시킵니다. */


/* 자동롤링 버튼 : 오른쪽으로 이동하는 화살표 아이콘 3개가 순차적으로 재생됩니다. */
#side .btnContents 
{width:150px;         /* 버튼/아이콘 묶음의 가로 크기입니다. */
height:50px;         /* 묶음의 세로 크기입니다. */
position:absolute;   /* 패널 내부에서 자유롭게 위치를 잡습니다. */
bottom:40px;         /* 하단에서 40px 띄워 배치합니다. */
left:100px;          /* 좌측에서 100px 위치로 시선의 시작점을 만듭니다. */
color:#b9fb05;	      /* 텍스트/아이콘 색을 형광 그린으로 지정해 일관된 포인트를 유지합니다. */
transform:skewX(40deg);} /* 패널(-40도)과 반대로 +40도 보정하여 아이콘이 수평처럼 보이게 합니다. */

/* 패널 hover 시 버튼 묶음을 오른쪽으로 크게 이동시켜 주의를 끕니다. */
#side:hover .btnContents 
{left:700px;}	      /* 700px로 이동해 '밀려나는' 역동감을 연출합니다. */	

/* 개별 아이콘(예: Font Awesome의 ▶ 등) 공통 스타일입니다. */
.btnContents i 
{font-size:60px;      /* 큰 아이콘 크기로 멀리서도 형태가 잘 보입니다. */
position:absolute;   /* 묶음 내부에서 정확한 출발점(오른쪽)으로 배치합니다. */
bottom:0px;          /* 하단에 붙여 정렬을 맞춥니다. */
right:0px;           /* 오른쪽 끝에서 애니메이션이 시작되도록 합니다. */
opacity:1;}          /* 기본 상태에서 완전히 보이게 합니다. */

/* 3개의 아이콘을 시간차로 같은 애니메이션에 투입해 연속적인 '흐름'을 만듭니다. */
.btnContents i:nth-child(1) 
{animation:ani linear 1.5s 0s infinite;}    /* 0초 지연으로 바로 출발(선두 주자) */

.btnContents i:nth-child(2) 
{animation:ani linear 1.5s 0.5s infinite;}  /* 0.5초 뒤 출발해 뒤따르는 느낌을 줍니다. */

.btnContents i:nth-child(3) 
{animation:ani linear 1.5s 1.0s infinite;}  /* 1초 뒤 출발해 꼬리를 형성합니다. */


/* 키프레임: 아이콘이 오른쪽으로 이동하며 점점 커지고 사라지는 동작을 정의합니다. */
@keyframes ani 
{0%   
{right:0px;    /* 시작점은 오른쪽 0입니다. 버튼 묶음의 오른쪽 모서리에서 출발합니다. */
transform:sclae(1); /* (오타) 'sclae' → 'scale'이 의도입니다. 시작 크기를 1배로 두는 의미입니다. */
opacity:1;}   /* 처음에는 완전히 보이게 시작합니다. */
100% 
{right:100px;  /* 오른쪽으로 100px 이동해 날아가는 듯한 궤적을 만듭니다. */
transform:scale(1.5); /* 이동하면서 1.5배로 커져 속도감을 더합니다. */
opacity:0;}}   /* 이동하며 점점 투명해져 화면에서 사라지게 됩니다. */
